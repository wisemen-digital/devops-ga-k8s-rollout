---
name: K8S Rollout
description: Restarts deployments matching the given criteria
inputs:
  vendor:
    description: The vendor to communicate with (digitalocean, scaleway)
    required: true
  cluster-id:
    description: Target cluster ID
    required: true
  rollout-deployments:
    description: List of deployments to rollout (comma separated)
    required: false
  rollout-labels:
    description: List of labels to rollout (comma separated)
    required: false
  rollout-namespace:
    description: Rollout namespace filter
    required: true
  # Vendor: DigitalOcean
  digitalocean-api-token:
    description: DigitalOcean API token
    required: false
  # Vendor: Scaleway
  scaleway-organization-id:
    description: Scaleway organization ID
    required: false
  scaleway-project-id:
    description: Scaleway project ID
    required: false
  scaleway-region:
    description: Scaleway deployment region (such as nl-ams)
    required: false
  scaleway-access-key:
    description: Scaleway API key ID
    required: false
  scaleway-secret-key:
    description: Scaleway API key secret
    required: false

runs:
  using: composite
  steps:
    # Vendor setup
    - uses: wisemen-digital/devops-ga-k8s-setup@main
      with:
        vendor: ${{ inputs.vendor }}
        cluster-id: ${{ inputs.cluster-id }}
        digitalocean-api-token: ${{ inputs.digitalocean-api-token }}
        scaleway-organization-id: ${{ inputs.scaleway-organization-id }}
        scaleway-project-id: ${{ inputs.scaleway-project-id }}
        scaleway-region: ${{ inputs.scaleway-region }}
        scaleway-access-key: ${{ inputs.scaleway-access-key }}
        scaleway-secret-key: ${{ inputs.scaleway-secret-key }}
    # Rollout
    - name: Restart deployments
      shell: bash
      env:
        DEPLOYMENTS: ${{ inputs.rollout-deployments }}
        LABELS: ${{ inputs.rollout-labels }}
      run: |
        # Restart multiple deployments
        if [ -n "$DEPLOYMENTS" ]; then
          for deployment in ${DEPLOYMENTS//,/ }; do
            kubectl rollout restart deployment \
              "$deployment" \
              --namespace="${{ inputs.rollout-namespace }}"
          done

        # Restart multiple labels
        elif [ -n "$LABELS" ]; then
          kubectl rollout restart deployment \
            --selector="$LABELS" \
            --namespace="${{ inputs.rollout-namespace }}"

        # Restart everything
        else
          kubectl rollout restart deployment \
            --namespace="${{ inputs.rollout-namespace }}"
        fi
